{"version":3,"sources":["components/Navbar/index.js","components/Header/index.js","components/Main/index.js","components/Card/index.js","App.js","index.js"],"names":["Navbar","props","className","class","href","score","topScore","Header","Main","children","Card","onClick","selected","id","alt","name","src","image","App","state","images","imgclicked","reorganize","element","array1","y","z","Math","floor","random","i","splice","setState","imgId","notExist","currentTopScore","length","push","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"81DAiBeA,MAdf,SAAgBC,GACZ,OAAQ,yBAAKC,UAAU,UACnB,4BACI,wBAAIC,MAAM,SAAQ,uBAAGC,KAAK,KAAR,gBAElB,wBAAID,MAAM,IAAV,4BAEA,sCAAYF,EAAMI,MAAlB,iBAAuCJ,EAAMK,a,MCG1CC,MAVf,SAAgBN,GACZ,OACI,4BAAQE,MAAM,WACV,4CACA,0G,MCKGK,MATf,SAAcP,GACV,OACI,0BAAME,MAAM,aAAaF,EAAMQ,W,aCYxBC,MAdf,SAAcT,GACV,OACI,4BAAQU,QAAS,kBAAIV,EAAMW,SAASX,EAAMY,KAAKA,GAAIZ,EAAMY,IACzD,yBAAKX,UAAU,QACf,yBAAKA,UAAU,iBACb,yBAAKY,IAAKb,EAAMc,KAAMC,IAAKf,EAAMgB,YC8E1BC,E,2MA7EbC,MAAQ,CACNC,SACAf,MAAM,EACNC,SAAS,EACTe,WAAW,I,EAKbC,WAAW,SAACC,GAKN,IAJF,IAAIC,EAAO,EAAKL,MAAMC,OAChBA,EAAO,GACPK,EAAG,GACJC,EAAEC,KAAKC,MAAMD,KAAKE,SAAWJ,GACvBK,EAAI,EAAGA,EAAI,GAAIA,IACtBV,EAAOU,GAAGN,EAAOE,GACjBD,IACAD,EAAOO,OAAOL,EAAE,GACfA,EAAEC,KAAKC,MAAMD,KAAKE,SAAWJ,GAGpC,OADE,EAAKO,SAAS,CAACZ,WACTG,G,EAGVX,SAAS,SAACC,GAOR,IANE,IAAIoB,EAAM,EAAKX,WAAWT,GACtBR,EAAM,EAAKc,MAAMd,MACjBC,EAAS,EAAKa,MAAMb,SACpBe,EAAW,EAAKF,MAAME,WACtBa,GAAS,EACTC,EAAgB,EAAKhB,MAAMd,MACxByB,EAAI,EAAGA,EAAIT,EAAWe,OAAQN,IACjCG,GAAOZ,EAAWS,KACpBI,GAAS,EACfC,EAAgB7B,IAClBA,EAAS6B,EACT,EAAKH,SAAS,CAAC1B,cAEjBD,EAAM,EACNgB,EAAW,GACX,EAAKW,SAAS,CAAC3B,QAAMgB,gBAGTa,IACFb,EAAWgB,KAAKJ,GAChB5B,IACA,EAAK2B,SAAS,CAACX,aAAWhB,Y,wEAMtB,IAAD,OACP,OACI,6BACF,kBAAC,EAAD,CACAA,MAAOiC,KAAKnB,MAAMd,MAClBC,SAAUgC,KAAKnB,MAAMb,WAErB,kBAAC,EAAD,MACA,kBAAC,EAAD,KACCgC,KAAKnB,MAAMC,OAAOmB,KAAI,SAAAnB,GAAM,OAC3B,kBAAC,EAAD,CACER,SAAU,EAAKA,SACfC,GAAIO,EAAOP,GACX2B,IAAKpB,EAAOP,GACZE,KAAMK,EAAOL,KACbE,MAAOG,EAAOH,iB,GArERwB,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.784741a9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n    return (<div className=\"navbar\">\n        <ul>\n            <li class=\"brand\"><a href=\"/\">Clicky Game</a>\n            </li>\n            <li class=\"\">Click an image to begin!\n            </li>\n            <li>Score: {props.score} | Top Score: {props.topScore}\n\n            </li>\n        </ul>\n    </div>);\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n    return (\n        <header class=\"bigblue\">\n            <h1>Clicky Game!</h1>\n            <h2>Click on an image to earn points, but don't click on any more than once!</h2>\n            </header>\n        \n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Main(props) {\n    return (\n        <main class=\"container\">{props.children}\n           \n      {/* </div><div role=\"img\" aria-label=\"click item\" class=\"click-item\" style=\"background-image: url(&quot;/assets/images/jerry.png&quot;);\"></div> */}\n      </main>\n    );\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n    return (\n        <button onClick={()=>props.selected(props.id)} id={props.id}>\n        <div className=\"card\" >\n        <div className=\"img-container\">\n          <img alt={props.name} src={props.image} />\n        </div>\n        </div>\n        </button>\n  );\n\n    \n}\n\nexport default Card;","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\"\nimport images from \"./images.json\";\nimport Card from \"./components/Card\"\n\nclass App extends Component {\n    \n    state = {\n      images,\n      score:0,\n      topScore:0,\n      imgclicked:[]\n    };\n  \n    \n\n    reorganize=(element)=>{\n        let array1=this.state.images;\n          let images=[];\n          let y =12;\n         let z=Math.floor(Math.random() * y)\n          for (let i = 0; i < 12; i++) {\n            images[i]=array1[z];\n            y--;\n            array1.splice(z,1)\n             z=Math.floor(Math.random() * y);\n        }\n        this.setState({images})\n      return  element\n    }\n  \n    selected=(id)=>{\n        let imgId=this.reorganize(id);\n        let score=this.state.score;\n        let topScore=this.state.topScore;\n        let imgclicked=this.state.imgclicked;\n        let notExist=true;\n        let currentTopScore=this.state.score;\n      for (let i = 0; i < imgclicked.length; i++) {\n        if (imgId==imgclicked[i]) {\n          notExist=false;\nif (currentTopScore>topScore) {\n  topScore=currentTopScore;\n  this.setState({topScore})\n}\nscore=0;\nimgclicked=[];\nthis.setState({score,imgclicked})\n\n        }}\n        if (notExist) {\n          imgclicked.push(imgId);\n          score++;\n          this.setState({imgclicked,score})\n        }\n    };\n\n\n\n    render() {\n      return (\n          <div>\n        <Navbar\n        score={this.state.score}\n        topScore={this.state.topScore}\n        />\n        <Header/>\n        <Main>\n        {this.state.images.map(images => (\n          <Card\n            selected={this.selected}\n            id={images.id}\n            key={images.id}\n            name={images.name}\n            image={images.image}\n            \n          />\n        ))}\n        </Main>\n        </div>\n      );\n    }\n  }\n  \n  export default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}